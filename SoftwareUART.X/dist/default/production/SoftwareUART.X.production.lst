

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Nov 21 13:25:05 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.44
    18                           ; Generated 14/09/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F26K22 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _ANSELAbits	set	3896
    52  0000                     _TMR0	set	4054
    53  0000                     _TXREG1	set	4013
    54  0000                     _PIE1bits	set	3997
    55  0000                     _SPBRG1	set	4015
    56  0000                     _BAUDCON1bits	set	4024
    57  0000                     _RCSTA1bits	set	4011
    58  0000                     _TXSTA1bits	set	4012
    59  0000                     _TRISCbits	set	3988
    60  0000                     _OSCTUNEbits	set	3995
    61  0000                     _OSCCONbits	set	4051
    62  0000                     _INTCONbits	set	4082
    63  0000                     _T0CONbits	set	4053
    64  0000                     _PORTAbits	set	3968
    65  0000                     _TRISAbits	set	3986
    66                           
    67                           	psect	smallconst
    68  001000                     __psmallconst:
    69                           	opt stack 0
    70  001000  00                 	db	0
    71  001001                     STR_2:
    72  001001  43                 	db	67	;'C'
    73  001002  61                 	db	97	;'a'
    74  001003  72                 	db	114	;'r'
    75  001004  61                 	db	97	;'a'
    76  001005  74                 	db	116	;'t'
    77  001006  74                 	db	116	;'t'
    78  001007  65                 	db	101	;'e'
    79  001008  72                 	db	114	;'r'
    80  001009  65                 	db	101	;'e'
    81  00100A  20                 	db	32
    82  00100B  72                 	db	114	;'r'
    83  00100C  69                 	db	105	;'i'
    84  00100D  63                 	db	99	;'c'
    85  00100E  65                 	db	101	;'e'
    86  00100F  76                 	db	118	;'v'
    87  001010  75                 	db	117	;'u'
    88  001011  74                 	db	116	;'t'
    89  001012  6F                 	db	111	;'o'
    90  001013  3A                 	db	58	;':'
    91  001014  20                 	db	32
    92  001015  25                 	db	37
    93  001016  63                 	db	99	;'c'
    94  001017  0A                 	db	10
    95  001018  0D                 	db	13
    96  001019  00                 	db	0
    97  00101A                     STR_1:
    98  00101A  0A                 	db	10
    99  00101B  0D                 	db	13
   100  00101C  52                 	db	82	;'R'
   101  00101D  45                 	db	69	;'E'
   102  00101E  53                 	db	83	;'S'
   103  00101F  45                 	db	69	;'E'
   104  001020  54                 	db	84	;'T'
   105  001021  0A                 	db	10
   106  001022  0D                 	db	13
   107  001023  00                 	db	0
   108                           
   109                           ; #config settings
   110  001024  00                 	db	0	; dummy byte at the end
   111  0000                     
   112                           	psect	cinit
   113  001208                     __pcinit:
   114                           	opt stack 0
   115  001208                     start_initialization:
   116                           	opt stack 0
   117  001208                     __initialization:
   118                           	opt stack 0
   119  001208                     end_of_initialization:
   120                           	opt stack 0
   121  001208                     __end_of__initialization:
   122                           	opt stack 0
   123  001208  0E00               	movlw	low (__Lmediumconst shr (0+16))
   124  00120A  6EF8               	movwf	tblptru,c
   125  00120C  0100               	movlb	0
   126  00120E  EF13  F008         	goto	_main	;jump to C main() function
   127                           tblptru	equ	0xFF8
   128                           
   129                           	psect	cstackCOMRAM
   130  000001                     __pcstackCOMRAM:
   131                           	opt stack 0
   132  000001                     putch@c:
   133                           	opt stack 0
   134                           
   135                           ; 1 bytes @ 0x0
   136  000001                     	ds	1
   137  000002                     ?_printf:
   138                           	opt stack 0
   139  000002                     printf@f:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x1
   143  000002                     	ds	4
   144  000006                     printf@flag:
   145                           	opt stack 0
   146                           
   147                           ; 1 bytes @ 0x5
   148  000006                     	ds	1
   149  000007                     printf@ap:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x6
   153  000007                     	ds	2
   154  000009                     printf@c:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x8
   158  000009                     	ds	1
   159  00000A                     ??_main:
   160                           
   161                           ; 1 bytes @ 0x9
   162  00000A                     	ds	3
   163  00000D                     main@buff:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0xC
   167  00000D                     	ds	2
   168  00000F                     main@rxbyte:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0xE
   172  00000F                     	ds	1
   173  000010                     main@i:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0xF
   177  000010                     	ds	2
   178  000012                     main@res:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x11
   182  000012                     	ds	2
   183  000014                     main@e:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x13
   187  000014                     	ds	2
   188  000016                     main@rxbuff:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x15
   192  000016                     	ds	2
   193                           tblptru	equ	0xFF8
   194                           
   195 ;;
   196 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   197 ;;
   198 ;; *************** function _main *****************
   199 ;; Defined at:
   200 ;;		line 40 in file "main.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;		None
   203 ;; Auto vars:     Size  Location     Type
   204 ;;  rxbuff          2   21[COMRAM] unsigned int 
   205 ;;  e               2   19[COMRAM] unsigned short 
   206 ;;  res             2   17[COMRAM] unsigned short 
   207 ;;  i               2   15[COMRAM] unsigned short 
   208 ;;  buff            2   12[COMRAM] unsigned int 
   209 ;;  rxbyte          1   14[COMRAM] unsigned char 
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   221 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   222 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   223 ;;Total ram usage:       14 bytes
   224 ;; Hardware stack levels required when called:    2
   225 ;; This function calls:
   226 ;;		_OSCILLATOR_Initialize
   227 ;;		_TIMER0_Initialize
   228 ;;		_UART_Initialize
   229 ;;		_printf
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text0
   236  001026                     __ptext0:
   237                           	opt stack 0
   238  001026                     _main:
   239                           	opt stack 29
   240                           
   241                           ;main.c: 41: OSCILLATOR_Initialize();
   242                           
   243                           ;incstack = 0
   244  001026  ECED  F008         	call	_OSCILLATOR_Initialize	;wreg free
   245                           
   246                           ;main.c: 42: TIMER0_Initialize();
   247  00102A  ECF6  F008         	call	_TIMER0_Initialize	;wreg free
   248                           
   249                           ;main.c: 43: UART_Initialize();
   250  00102E  ECDE  F008         	call	_UART_Initialize	;wreg free
   251                           
   252                           ;main.c: 44: printf("\n\rRESET\n\r");
   253  001032  0E1A               	movlw	low STR_1
   254  001034  6E02               	movwf	printf@f,c
   255  001036  0E10               	movlw	high STR_1
   256  001038  6E03               	movwf	printf@f+1,c
   257  00103A  ECA2  F008         	call	_printf	;wreg free
   258                           
   259                           ;main.c: 45: unsigned short int i, e, res;
   260                           ;main.c: 46: char rxbyte;
   261                           ;main.c: 47: uint16_t rxbuff, buff;
   262                           ;main.c: 48: ANSELAbits.ANSA0 = 0;
   263  00103E  010F               	movlb	15	; () banked
   264  001040  9138               	bcf	56,0,b	;volatile
   265                           
   266                           ; BSR set to: 15
   267                           ;main.c: 49: TRISAbits.RA0 = 1;
   268  001042  8092               	bsf	3986,0,c	;volatile
   269  001044                     
   270                           ;main.c: 51: if (PORTAbits.RA0 == 0) {
   271                           
   272                           ; BSR set to: 15
   273  001044  B080               	btfsc	3968,0,c	;volatile
   274  001046  D7FE               	goto	l43
   275                           
   276                           ;main.c: 52: TMR0 = 65327;
   277  001048  0EFF               	movlw	255
   278  00104A  6ED7               	movwf	4055,c	;volatile
   279  00104C  0E2F               	movlw	47
   280  00104E  6ED6               	movwf	4054,c	;volatile
   281                           
   282                           ;main.c: 53: T0CONbits.TMR0ON = 1;
   283  001050  8ED5               	bsf	4053,7,c	;volatile
   284                           
   285                           ;main.c: 54: i = 0;
   286  001052  0E00               	movlw	0
   287  001054  6E11               	movwf	main@i+1,c
   288  001056  0E00               	movlw	0
   289  001058  6E10               	movwf	main@i,c
   290                           
   291                           ;main.c: 55: rxbyte = 0;
   292  00105A  0E00               	movlw	0
   293  00105C  6E0F               	movwf	main@rxbyte,c
   294                           
   295                           ;main.c: 56: buff = 0;
   296  00105E  0E00               	movlw	0
   297  001060  6E0E               	movwf	main@buff+1,c
   298  001062  0E00               	movlw	0
   299  001064  6E0D               	movwf	main@buff,c
   300                           
   301                           ;main.c: 57: rxbuff = 0;
   302  001066  0E00               	movlw	0
   303  001068  6E17               	movwf	main@rxbuff+1,c
   304  00106A  0E00               	movlw	0
   305  00106C  6E16               	movwf	main@rxbuff,c
   306                           
   307                           ;main.c: 58: e = 0;
   308  00106E  0E00               	movlw	0
   309  001070  6E15               	movwf	main@e+1,c
   310  001072  0E00               	movlw	0
   311  001074  6E14               	movwf	main@e,c
   312                           
   313                           ;main.c: 59: res = 0;
   314  001076  0E00               	movlw	0
   315  001078  6E13               	movwf	main@res+1,c
   316  00107A  0E00               	movlw	0
   317  00107C  6E12               	movwf	main@res,c
   318                           
   319                           ;main.c: 60: while (i < 9) {
   320  00107E  D025               	goto	l47
   321  001080                     l46:
   322                           
   323                           ;main.c: 61: if (INTCONbits.TMR0IF == 1) {
   324  001080  A4F2               	btfss	intcon,2,c	;volatile
   325  001082  D023               	goto	l47
   326                           
   327                           ;main.c: 62: TMR0 = 65396;
   328  001084  0EFF               	movlw	255
   329  001086  6ED7               	movwf	4055,c	;volatile
   330  001088  0E74               	movlw	116
   331  00108A  6ED6               	movwf	4054,c	;volatile
   332                           
   333                           ;main.c: 63: INTCONbits.TMR0IF = 0;
   334  00108C  94F2               	bcf	intcon,2,c	;volatile
   335                           
   336                           ;main.c: 64: buff = PORTAbits.RA0;
   337  00108E  A080               	btfss	3968,0,c	;volatile
   338  001090  D003               	goto	u190
   339  001092  6A0A               	clrf	??_main& (0+255),c
   340  001094  2A0A               	incf	??_main& (0+255),f,c
   341  001096  D001               	goto	u198
   342  001098                     u190:
   343  001098  6A0A               	clrf	??_main& (0+255),c
   344  00109A                     u198:
   345  00109A  500A               	movf	??_main,w,c
   346  00109C  6E0D               	movwf	main@buff,c
   347  00109E  6A0E               	clrf	main@buff+1,c
   348                           
   349                           ;main.c: 65: rxbuff = buff << i | rxbuff;
   350  0010A0  C010  F00A         	movff	main@i,??_main
   351  0010A4  C00D  F00B         	movff	main@buff,??_main+1
   352  0010A8  C00E  F00C         	movff	main@buff+1,??_main+2
   353  0010AC  2A0A               	incf	??_main,f,c
   354  0010AE  D003               	goto	u204
   355  0010B0                     u205:
   356  0010B0  90D8               	bcf	status,0,c
   357  0010B2  360B               	rlcf	??_main+1,f,c
   358  0010B4  360C               	rlcf	??_main+2,f,c
   359  0010B6                     u204:
   360  0010B6  2E0A               	decfsz	??_main,f,c
   361  0010B8  D7FB               	goto	u205
   362  0010BA  5016               	movf	main@rxbuff,w,c
   363  0010BC  100B               	iorwf	??_main+1,w,c
   364  0010BE  6E16               	movwf	main@rxbuff,c
   365  0010C0  5017               	movf	main@rxbuff+1,w,c
   366  0010C2  100C               	iorwf	??_main+2,w,c
   367  0010C4  6E17               	movwf	main@rxbuff+1,c
   368                           
   369                           ;main.c: 66: i++;
   370  0010C6  4A10               	infsnz	main@i,f,c
   371  0010C8  2A11               	incf	main@i+1,f,c
   372  0010CA                     l47:
   373  0010CA  5011               	movf	main@i+1,w,c
   374  0010CC  E104               	bnz	l847
   375  0010CE  0E09               	movlw	9
   376  0010D0  5C10               	subwf	main@i,w,c
   377  0010D2  A0D8               	btfss	status,0,c
   378  0010D4  D7D5               	goto	l46
   379  0010D6                     l847:
   380                           
   381                           ;main.c: 67: }
   382                           ;main.c: 68: }
   383                           ;main.c: 70: for (; e < 9; e++) res = ((rxbuff >> e) & 0b0000000000000001) + res;
   384  0010D6  5015               	movf	main@e+1,w,c
   385  0010D8  E120               	bnz	l50
   386  0010DA  D01B               	goto	L1
   387  0010DC  C014  F00A         	movff	main@e,??_main
   388  0010E0  C016  F00B         	movff	main@rxbuff,??_main+1
   389  0010E4  C017  F00C         	movff	main@rxbuff+1,??_main+2
   390  0010E8  2A0A               	incf	??_main,f,c
   391  0010EA  D003               	goto	u234
   392  0010EC                     u235:
   393  0010EC  90D8               	bcf	status,0,c
   394  0010EE  320C               	rrcf	??_main+2,f,c
   395  0010F0  320B               	rrcf	??_main+1,f,c
   396  0010F2                     u234:
   397  0010F2  2E0A               	decfsz	??_main,f,c
   398  0010F4  D7FB               	goto	u235
   399  0010F6  0E01               	movlw	1
   400  0010F8  160B               	andwf	??_main+1,f,c
   401  0010FA  0E00               	movlw	0
   402  0010FC  160C               	andwf	??_main+2,f,c
   403  0010FE  5012               	movf	main@res,w,c
   404  001100  240B               	addwf	??_main+1,w,c
   405  001102  6E12               	movwf	main@res,c
   406  001104  5013               	movf	main@res+1,w,c
   407  001106  200C               	addwfc	??_main+2,w,c
   408  001108  6E13               	movwf	main@res+1,c
   409  00110A  4A14               	infsnz	main@e,f,c
   410  00110C  2A15               	incf	main@e+1,f,c
   411  00110E  5015               	movf	main@e+1,w,c
   412  001110  E104               	bnz	u240
   413  001112                     L1:
   414  001112  0E09               	movlw	9
   415  001114  5C14               	subwf	main@e,w,c
   416  001116  A0D8               	btfss	status,0,c
   417  001118  D7E1               	goto	l49
   418  00111A                     u240:
   419  00111A                     l50:
   420                           
   421                           ;main.c: 71: if ((res % 2) != 0) rxbyte = 0;
   422  00111A  A012               	btfss	main@res,0,c
   423  00111C  D003               	goto	l51
   424  00111E  0E00               	movlw	0
   425  001120  6E0F               	movwf	main@rxbyte,c
   426  001122  D002               	goto	l52
   427  001124                     l51:
   428                           
   429                           ;main.c: 72: else rxbyte = rxbuff;
   430  001124  C016  F00F         	movff	main@rxbuff,main@rxbyte
   431  001128                     l52:
   432                           
   433                           ;main.c: 73: while (INTCONbits.TMR0IF == 0);
   434  001128  A4F2               	btfss	intcon,2,c	;volatile
   435  00112A  D7FE               	goto	l52
   436                           
   437                           ;main.c: 74: T0CONbits.TMR0ON = 0;
   438  00112C  9ED5               	bcf	4053,7,c	;volatile
   439                           
   440                           ;main.c: 75: INTCONbits.TMR0IF = 0;
   441  00112E  94F2               	bcf	intcon,2,c	;volatile
   442                           
   443                           ;main.c: 76: printf("Carattere ricevuto: %c\n\r", rxbyte);
   444  001130  0E01               	movlw	low STR_2
   445  001132  6E02               	movwf	printf@f,c
   446  001134  0E10               	movlw	high STR_2
   447  001136  6E03               	movwf	printf@f+1,c
   448  001138  C00F  F004         	movff	main@rxbyte,?_printf+2
   449  00113C  6A05               	clrf	?_printf+3,c
   450  00113E  ECA2  F008         	call	_printf	;wreg free
   451  001142  D780               	goto	l43
   452  001144                     __end_of_main:
   453                           	opt stack 0
   454                           tblptru	equ	0xFF8
   455                           intcon	equ	0xFF2
   456                           status	equ	0xFD8
   457                           
   458 ;; *************** function _printf *****************
   459 ;; Defined at:
   460 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  f               2    1[COMRAM] PTR const unsigned char 
   463 ;;		 -> STR_2(25), STR_1(10), 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  tmpval          4    0        struct .
   466 ;;  cp              3    0        PTR const unsigned char 
   467 ;;  ap              2    6[COMRAM] PTR void [1]
   468 ;;		 -> ?_printf(2), 
   469 ;;  len             2    0        unsigned int 
   470 ;;  val             2    0        unsigned int 
   471 ;;  c               1    8[COMRAM] char 
   472 ;;  flag            1    5[COMRAM] unsigned char 
   473 ;;  prec            1    0        char 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  2    1[COMRAM] int 
   476 ;; Registers used:
   477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;Total ram usage:        8 bytes
   488 ;; Hardware stack levels used:    1
   489 ;; Hardware stack levels required when called:    1
   490 ;; This function calls:
   491 ;;		_putch
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text1
   498  001144                     __ptext1:
   499                           	opt stack 0
   500  001144                     _printf:
   501                           	opt stack 29
   502                           
   503                           ;doprnt.c: 466: va_list ap;
   504                           ;doprnt.c: 499: signed char c;
   505                           ;doprnt.c: 506: signed char prec;
   506                           ;doprnt.c: 508: unsigned char flag;
   507                           ;doprnt.c: 523: union {
   508                           ;doprnt.c: 524: unsigned long vd;
   509                           ;doprnt.c: 525: double integ;
   510                           ;doprnt.c: 526: } tmpval;
   511                           ;doprnt.c: 528: unsigned int val;
   512                           ;doprnt.c: 529: unsigned len;
   513                           ;doprnt.c: 530: const char * cp;
   514                           ;doprnt.c: 533: *ap = __va_start();
   515                           
   516                           ;incstack = 0
   517  001144  0E04               	movlw	low (?_printf+2)
   518  001146  6E07               	movwf	printf@ap,c
   519  001148  0E00               	movlw	high (?_printf+2)
   520  00114A  6E08               	movwf	printf@ap+1,c
   521                           
   522                           ;doprnt.c: 536: while(c = *f++) {
   523  00114C  D02A               	goto	l93
   524  00114E                     
   525                           ;doprnt.c: 538: if(c != '%')
   526  00114E  0E25               	movlw	37
   527  001150  1809               	xorwf	printf@c,w,c
   528  001152  B4D8               	btfsc	status,2,c
   529  001154  D004               	goto	l87
   530                           
   531                           ;doprnt.c: 540: {
   532                           ;doprnt.c: 541: (putch(c) );
   533  001156  5009               	movf	printf@c,w,c
   534  001158  ECFE  F008         	call	_putch
   535                           
   536                           ;doprnt.c: 542: continue;
   537  00115C  D022               	goto	l93
   538  00115E                     l87:
   539                           
   540                           ;doprnt.c: 543: }
   541                           ;doprnt.c: 548: flag = 0;
   542  00115E  0E00               	movlw	0
   543  001160  6E06               	movwf	printf@flag,c
   544                           
   545                           ;doprnt.c: 635: switch(c = *f++) {
   546  001162  D00E               	goto	l88
   547  001164                     
   548                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   549  001164  C007  FFD9         	movff	printf@ap,fsr2l
   550  001168  C008  FFDA         	movff	printf@ap+1,fsr2h
   551  00116C  50DF               	movf	indf2,w,c
   552  00116E  6E09               	movwf	printf@c,c
   553  001170  0E02               	movlw	2
   554  001172  2607               	addwf	printf@ap,f,c
   555  001174  0E00               	movlw	0
   556  001176  2208               	addwfc	printf@ap+1,f,c
   557  001178                     
   558                           ;doprnt.c: 809: (putch(c) );
   559  001178  5009               	movf	printf@c,w,c
   560  00117A  ECFE  F008         	call	_putch
   561                           
   562                           ;doprnt.c: 822: }
   563                           
   564                           ;doprnt.c: 810: continue;
   565  00117E  D011               	goto	l93
   566  001180                     l88:
   567  001180  C002  FFF6         	movff	printf@f,tblptrl
   568  001184  C003  FFF7         	movff	printf@f+1,tblptrh
   569  001188  4A02               	infsnz	printf@f,f,c
   570  00118A  2A03               	incf	printf@f+1,f,c
   571  00118C                     	if	0	;tblptru may be non-zero
   572  00118C                     	endif
   573  00118C                     	if	0	;tblptru may be non-zero
   574  00118C                     	endif
   575  00118C  0008               	tblrd		*
   576  00118E  CFF5 F009          	movff	tablat,printf@c
   577  001192  5009               	movf	printf@c,w,c
   578                           
   579                           ; Switch size 1, requested type "space"
   580                           ; Number of cases is 2, Range of values is 0 to 99
   581                           ; switch strategies available:
   582                           ; Name         Instructions Cycles
   583                           ; simple_byte            7     4 (average)
   584                           ;	Chosen strategy is simple_byte
   585  001194  0A00               	xorlw	0	; case 0
   586  001196  B4D8               	btfsc	status,2,c
   587  001198  0012               	return	
   588  00119A  0A63               	xorlw	99	; case 99
   589  00119C  B4D8               	btfsc	status,2,c
   590  00119E  D7E2               	goto	l91
   591  0011A0  D7EB               	goto	l92
   592  0011A2                     l93:
   593                           
   594                           ;doprnt.c: 1422: {
   595  0011A2  C002  FFF6         	movff	printf@f,tblptrl
   596  0011A6  C003  FFF7         	movff	printf@f+1,tblptrh
   597  0011AA  4A02               	infsnz	printf@f,f,c
   598  0011AC  2A03               	incf	printf@f+1,f,c
   599  0011AE                     	if	0	;tblptru may be non-zero
   600  0011AE                     	endif
   601  0011AE                     	if	0	;tblptru may be non-zero
   602  0011AE                     	endif
   603  0011AE  0008               	tblrd		*
   604  0011B0  CFF5 F009          	movff	tablat,printf@c
   605  0011B4  5009               	movf	printf@c,w,c
   606  0011B6  B4D8               	btfsc	status,2,c
   607  0011B8  0012               	return	
   608  0011BA  D7C9               	goto	l86
   609  0011BC                     __end_of_printf:
   610                           	opt stack 0
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           intcon	equ	0xFF2
   616                           indf2	equ	0xFDF
   617                           fsr2h	equ	0xFDA
   618                           fsr2l	equ	0xFD9
   619                           status	equ	0xFD8
   620                           
   621 ;; *************** function _putch *****************
   622 ;; Defined at:
   623 ;;		line 129 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  c               1    wreg     unsigned char 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  c               1    0[COMRAM] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        1 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_printf
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text2
   651  0011FC                     __ptext2:
   652                           	opt stack 0
   653  0011FC                     _putch:
   654                           	opt stack 29
   655                           
   656                           ;incstack = 0
   657                           ;putch@c stored from wreg
   658  0011FC  6E01               	movwf	putch@c,c
   659  0011FE                     
   660                           ;main.c: 131: while (TXSTA1bits.TRMT == 0);
   661  0011FE  A2AC               	btfss	4012,1,c	;volatile
   662  001200  D7FE               	goto	l717
   663                           
   664                           ;main.c: 132: TXREG1 = c;
   665  001202  C001  FFAD         	movff	putch@c,4013	;volatile
   666  001206  0012               	return		;funcret
   667  001208                     __end_of_putch:
   668                           	opt stack 0
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           intcon	equ	0xFF2
   674                           indf2	equ	0xFDF
   675                           fsr2h	equ	0xFDA
   676                           fsr2l	equ	0xFD9
   677                           status	equ	0xFD8
   678                           
   679 ;; *************** function _UART_Initialize *****************
   680 ;; Defined at:
   681 ;;		line 110 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text3
   709  0011BC                     __ptext3:
   710                           	opt stack 0
   711  0011BC                     _UART_Initialize:
   712                           	opt stack 30
   713                           
   714                           ;main.c: 112: TRISCbits.TRISC6 = 0;
   715                           
   716                           ;incstack = 0
   717  0011BC  9C94               	bcf	3988,6,c	;volatile
   718                           
   719                           ;main.c: 113: TRISCbits.TRISC7 = 1;
   720  0011BE  8E94               	bsf	3988,7,c	;volatile
   721                           
   722                           ;main.c: 114: TXSTA1bits.SYNC = 0;
   723  0011C0  98AC               	bcf	4012,4,c	;volatile
   724                           
   725                           ;main.c: 115: TXSTA1bits.TX9 = 0;
   726  0011C2  9CAC               	bcf	4012,6,c	;volatile
   727                           
   728                           ;main.c: 116: TXSTA1bits.TXEN = 1;
   729  0011C4  8AAC               	bsf	4012,5,c	;volatile
   730                           
   731                           ;main.c: 117: RCSTA1bits.RC9 = 0;
   732  0011C6  9CAB               	bcf	4011,6,c	;volatile
   733                           
   734                           ;main.c: 118: RCSTA1bits.CREN = 1;
   735  0011C8  88AB               	bsf	4011,4,c	;volatile
   736                           
   737                           ;main.c: 119: RCSTA1bits.SPEN = 1;
   738  0011CA  8EAB               	bsf	4011,7,c	;volatile
   739                           
   740                           ;main.c: 121: BAUDCON1bits.BRG16 = 0;
   741  0011CC  96B8               	bcf	4024,3,c	;volatile
   742                           
   743                           ;main.c: 122: TXSTA1bits.BRGH = 0;
   744  0011CE  94AC               	bcf	4012,2,c	;volatile
   745                           
   746                           ;main.c: 123: SPBRG1 = 51;
   747  0011D0  0E33               	movlw	51
   748  0011D2  6EAF               	movwf	4015,c	;volatile
   749                           
   750                           ;main.c: 125: PIE1bits.TX1IE = 0;
   751  0011D4  989D               	bcf	3997,4,c	;volatile
   752                           
   753                           ;main.c: 126: PIE1bits.RC1IE = 0;
   754  0011D6  9A9D               	bcf	3997,5,c	;volatile
   755  0011D8  0012               	return		;funcret
   756  0011DA                     __end_of_UART_Initialize:
   757                           	opt stack 0
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           intcon	equ	0xFF2
   763                           indf2	equ	0xFDF
   764                           fsr2h	equ	0xFDA
   765                           fsr2l	equ	0xFD9
   766                           status	equ	0xFD8
   767                           
   768 ;; *************** function _TIMER0_Initialize *****************
   769 ;; Defined at:
   770 ;;		line 92 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		None
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text4
   798  0011EC                     __ptext4:
   799                           	opt stack 0
   800  0011EC                     _TIMER0_Initialize:
   801                           	opt stack 30
   802                           
   803                           ;main.c: 94: T0CONbits.T0CS = 0;
   804                           
   805                           ;incstack = 0
   806  0011EC  9AD5               	bcf	4053,5,c	;volatile
   807                           
   808                           ;main.c: 95: T0CONbits.TMR0ON = 0;
   809  0011EE  9ED5               	bcf	4053,7,c	;volatile
   810                           
   811                           ;main.c: 96: T0CONbits.T08BIT = 0;
   812  0011F0  9CD5               	bcf	4053,6,c	;volatile
   813                           
   814                           ;main.c: 97: T0CONbits.PSA = 0;
   815  0011F2  96D5               	bcf	4053,3,c	;volatile
   816                           
   817                           ;main.c: 98: T0CONbits.T0PS = 0;
   818  0011F4  90D5               	bcf	4053,0,c	;volatile
   819  0011F6  92D5               	bcf	4053,1,c	;volatile
   820  0011F8  94D5               	bcf	4053,2,c	;volatile
   821  0011FA  0012               	return		;funcret
   822  0011FC                     __end_of_TIMER0_Initialize:
   823                           	opt stack 0
   824                           tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           intcon	equ	0xFF2
   829                           indf2	equ	0xFDF
   830                           fsr2h	equ	0xFDA
   831                           fsr2l	equ	0xFD9
   832                           status	equ	0xFD8
   833                           
   834 ;; *************** function _OSCILLATOR_Initialize *****************
   835 ;; Defined at:
   836 ;;		line 82 in file "main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text5
   864  0011DA                     __ptext5:
   865                           	opt stack 0
   866  0011DA                     _OSCILLATOR_Initialize:
   867                           	opt stack 30
   868                           
   869                           ;main.c: 84: OSCCONbits.SCS = 0b00;
   870                           
   871                           ;incstack = 0
   872  0011DA  0EFC               	movlw	-4
   873  0011DC  16D3               	andwf	4051,f,c	;volatile
   874                           
   875                           ;main.c: 85: OSCCONbits.IRCF = 0b111;
   876  0011DE  88D3               	bsf	4051,4,c	;volatile
   877  0011E0  8AD3               	bsf	4051,5,c	;volatile
   878  0011E2  8CD3               	bsf	4051,6,c	;volatile
   879                           
   880                           ;main.c: 86: OSCTUNEbits.PLLEN = 1;
   881  0011E4  8C9B               	bsf	3995,6,c	;volatile
   882  0011E6  B4D3               	btfsc	4051,2,c	;volatile
   883  0011E8  0012               	return	
   884  0011EA  D7FD               	goto	l62
   885  0011EC                     __end_of_OSCILLATOR_Initialize:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           intcon	equ	0xFF2
   892                           indf2	equ	0xFDF
   893                           fsr2h	equ	0xFDA
   894                           fsr2l	equ	0xFD9
   895                           status	equ	0xFD8
   896                           tblptru	equ	0xFF8
   897                           tblptrh	equ	0xFF7
   898                           tblptrl	equ	0xFF6
   899                           tablat	equ	0xFF5
   900                           intcon	equ	0xFF2
   901                           indf2	equ	0xFDF
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           status	equ	0xFD8
   905                           
   906                           	psect	rparam
   907  0000                     tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           intcon	equ	0xFF2
   912                           indf2	equ	0xFDF
   913                           fsr2h	equ	0xFDA
   914                           fsr2l	equ	0xFD9
   915                           status	equ	0xFD8


Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     582
                                              9 COMRAM    14    14      0
              _OSCILLATOR_Initialize
                  _TIMER0_Initialize
                    _UART_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4     305
                                              1 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILLATOR_Initialize
   _TIMER0_Initialize
   _UART_Initialize
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     17      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Nov 21 13:25:05 2017

                            l50 111A                              l51 1124                              l43 1044  
                            l52 1128                              l62 11E6                              l46 1080  
                            l47 10CA                              l49 10DC                              l91 1164  
                            l92 1178                              l93 11A2                              l86 114E  
                            l87 115E                              l88 1180                             l717 11FE  
                           l847 10D6                             u204 10B6                             u205 10B0  
                           u240 111A                             u234 10F2                             u235 10EC  
                           u190 1098                             u198 109A                      _TXSTA1bits 000FAC  
                          STR_1 101A                            STR_2 1001                            _TMR0 000FD6  
                          _main 1026                            fsr2h 000FDA                            indf2 000FDF  
                          fsr2l 000FD9                   __CFG_BORV$190 000000                            start 0000  
                 __CFG_IESO$OFF 000000                    ___param_bank 000000                ?_UART_Initialize 0001  
                  _BAUDCON1bits 000FB8  __size_of_OSCILLATOR_Initialize 0012   __end_of_OSCILLATOR_Initialize 11EC  
                         ?_main 0001      __size_of_TIMER0_Initialize 0010                  __CFG_FCMEN$OFF 000000  
                         _putch 11FC                           main@e 0014                           main@i 0010  
                         tablat 000FF5                           status 000FD8                 __initialization 1208  
                  __end_of_main 1144                          ??_main 000A                   __activetblptr 000002  
                        ?_putch 0001                  __CFG_WDTEN$OFF 000000                          _SPBRG1 000FAF  
                        _TXREG1 000FAD                  __CFG_PWRTEN$ON 000000                          _printf 1144  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                          putch@c 0001                      __accesstop 0060  
       __end_of__initialization 1208                   ___rparam_used 000001                  __pcstackCOMRAM 0001  
                 __end_of_putch 1208                         ??_putch 0001                 __CFG_PLLCFG$OFF 000000  
                       ?_printf 0002                         __Hparam 0000                         __Lparam 0000  
                  __psmallconst 1000                         __pcinit 1208                         __ramtop 1000  
                       __ptext0 1026                         __ptext1 1144                         __ptext2 11FC  
                       __ptext3 11BC                         __ptext4 11EC                         __ptext5 11DA  
               __size_of_printf 0078                       _T0CONbits 000FD5           _OSCILLATOR_Initialize 11DA  
      __size_of_UART_Initialize 001E                         main@res 0012            end_of_initialization 1208  
                 __Lmediumconst 0000                         printf@c 0009                         printf@f 0002  
                     _PORTAbits 000F80                       _TRISAbits 000F92                       _TRISCbits 000F94  
                    main@rxbuff 0016                      main@rxbyte 000F          ?_OSCILLATOR_Initialize 0001  
                __end_of_printf 11BC             start_initialization 1208               ??_UART_Initialize 0001  
                      ??_printf 0006                __CFG_PRICLKEN$ON 000000                     __smallconst 1000  
                __size_of_putch 000C                        _PIE1bits 000F9D                __CFG_WDTPS$32768 000000  
                    printf@flag 0006                        __Hrparam 0000                        __Lrparam 0000  
            __CFG_BOREN$SBORDIS 000000         ??_OSCILLATOR_Initialize 0001                      _ANSELAbits 000F38  
               _UART_Initialize 11BC                   __size_of_main 011E                        main@buff 000D  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2               _TIMER0_Initialize 11EC  
            ?_TIMER0_Initialize 0001                      _RCSTA1bits 000FAB                      _OSCCONbits 000FD3  
           ??_TIMER0_Initialize 0001                        printf@ap 0007         __end_of_UART_Initialize 11DA  
     __end_of_TIMER0_Initialize 11FC               __CFG_FOSC$INTIO67 000000  
